{"version":3,"sources":["Filter/Filter.module.css","ContactForm/ContactForm.module.css","ContactForm/ContactForm.js","ContactsList/ContactsList.js","Filter/Filter.js","App.js","index.js","ContactsList/ContactsList.module.css"],"names":["module","exports","INITIAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","uuidv4","resetForm","onCheckUnique","alert","this","className","styles","form","onSubmit","input","type","placeholder","onChange","button","Component","ContactListItem","onRemove","item","onClick","ContactsList","contacts","length","title","map","contact","Filter","filter","App","number","handleAddContact","newContact","handleCheckUniqueContact","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","_prevProps","prevState","nextContacts","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfeacaf4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__s27wb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__2b-xR\",\"button\":\"ContactForm_button__JYhXI\"};","import { Component } from 'react';\r\n\r\nimport styles from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst INITIAL_STATE = {\r\n    name: '',\r\n    phone: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n    state = INITIAL_STATE;\r\n\r\n    handleChangeForm = ({ target }) => {\r\n        const { name, value } = target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { name, phone } = this.state;\r\n        const { onAdd } = this.props;\r\n\r\n        const isValidatedForm = this.validateForm();\r\n\r\n        if (!isValidatedForm) return;\r\n        onAdd({ id: uuidv4(), name, phone });\r\n        this.resetForm();\r\n    };\r\n\r\n    validateForm = () => {\r\n        const { name, phone } = this.state;\r\n        const { onCheckUnique } = this.props;\r\n        if (!name || !phone) {\r\n            alert('Some filed is empry');\r\n            return false;\r\n        }\r\n\r\n        return onCheckUnique(name);\r\n    };\r\n\r\n    resetForm = () => this.setState(INITIAL_STATE);\r\n\r\n    render() {\r\n        const { name, phone } = this.state;\r\n        return (\r\n            <form className={styles.form} onSubmit={this.handleFormSubmit}>\r\n                <input\r\n                    className={styles.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={this.handleChangeForm}\r\n                />\r\n                <br />\r\n                <input\r\n                    className={styles.input}\r\n                    type=\"tel\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone number\"\r\n                    value={phone}\r\n                    onChange={this.handleChangeForm}\r\n                />\r\n                <br />\r\n                <button className={styles.button} type=\"submit\">\r\n                    Add Contact\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onAdd: PropTypes.func,\r\n    onCheckUnique: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import styles from './ContactsList.module.css';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\r\n    return (\r\n        <li>\r\n            <span className={styles.item}>\r\n                {name}:{phone}\r\n            </span>{' '}\r\n            <button className={styles.button} onClick={() => onRemove(id)}>\r\n                delete\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n    if (contacts.length === 0) return null;\r\n    return (\r\n        <ul className={styles.title}>\r\n            {contacts.map(contact => (\r\n                <ContactListItem {...contact} onRemove={onRemove} />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object),\r\n    onRemove: PropTypes.func,\r\n};\r\n\r\nexport default ContactsList;\r\n","import styles from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n    return (\r\n        <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={({ target }) => onChange(target.value)}\r\n            placeholder=\"Enter name for Search\"\r\n        ></input>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\r\n\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactsList from './ContactsList/ContactsList';\r\nimport Filter from './Filter/Filter';\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        contacts: [\r\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n        ],\r\n        filter: '',\r\n    };\r\n\r\n    componentDidMount() {\r\n        const contacts = localStorage.getItem('contacts');\r\n        const parsedContacts = JSON.parse(contacts);\r\n\r\n        if (parsedContacts) {\r\n            this.setState({ contacts: parsedContacts });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(_prevProps, prevState) {\r\n        const nextContacts = this.state.contacts;\r\n        const prevContacts = prevState.contacts;\r\n        if (nextContacts !== prevContacts) {\r\n            localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n        }\r\n    }\r\n\r\n    handleAddContact = newContact =>\r\n        this.setState(({ contacts }) => ({\r\n            contacts: [...contacts, newContact],\r\n        }));\r\n\r\n    handleCheckUniqueContact = name => {\r\n        const { contacts } = this.state;\r\n\r\n        const isExistContact = !!contacts.find(\r\n            contact => contact.name === name,\r\n        );\r\n\r\n        isExistContact && alert('Contact is already exist');\r\n\r\n        return !isExistContact;\r\n    };\r\n\r\n    handleRemoveContact = id =>\r\n        this.setState(({ contacts }) => ({\r\n            contacts: contacts.filter(contact => contact.id !== id),\r\n        }));\r\n\r\n    handleFilterChange = filter => this.setState({ filter });\r\n\r\n    getVisibleContacts = () => {\r\n        const { contacts, filter } = this.state;\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { filter } = this.state;\r\n        const visibleContacts = this.getVisibleContacts();\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <h2 className=\"title\">Form Contact</h2>\r\n                    <ContactForm\r\n                        onAdd={this.handleAddContact}\r\n                        onCheckUnique={this.handleCheckUniqueContact}\r\n                    />\r\n                    <h2 className=\"title\">Contacts List</h2>\r\n                    <Filter\r\n                        filter={filter}\r\n                        onChange={this.handleFilterChange}\r\n                    />\r\n                    <ContactsList\r\n                        contacts={visibleContacts}\r\n                        onRemove={this.handleRemoveContact}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__132xf\",\"button\":\"ContactsList_button__1Hcdm\"};"],"sourceRoot":""}